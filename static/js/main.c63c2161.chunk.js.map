{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter.js","App.js","index.js"],"names":["INITIAL_STATE","contacts","name","number","ContactForm","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","onSubmit","this","placeholder","onChange","type","Component","ContactList","onRemoveContact","map","id","onClick","Filter","onChangeFilter","App","filter","addContact","contact","nextId","prevState","find","toLowerCase","swal","removeContact","contactId","getVisibleContacts","includes","changeFilter","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c63c2161.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst INITIAL_STATE = {\r\n  contacts: [],\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  // handleNameChange = (e) => {\r\n  //   this.setState({\r\n  //     name: e.target.value,\r\n  //   });\r\n  // };\r\n\r\n  // handleNumberChange = (e) => {\r\n  //   this.setState({\r\n  //     number: e.target.value,\r\n  //   });\r\n  // };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Name</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            name=\"name\"\r\n            placeholder=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n        <h2>Number</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            name=\"number\"\r\n            placeholder=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, number, id }) => {\r\n        return (\r\n          <li key={id}>\r\n            <p>{name}</p>\r\n            <p>{number}</p>\r\n            <section>\r\n              <button type=\"button\" onClick={() => onRemoveContact(id)}>\r\n                Удалить\r\n              </button>\r\n            </section>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) =>{\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"insert name\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value:PropTypes.string.isRequired\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport nextId from \"react-id-generator\";\nimport Filter from \"./components/Filter\";\nimport swal from \"sweetalert\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n\n    if (persistedContacts) {\n     this.setState({ contacts: JSON.parse(persistedContacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const contact = {\n      id: nextId(),\n      name,\n      number,\n    };\n\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n    if (\n      this.state.contacts.find(\n        ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      swal(`${name} is already in contacts`);\n      return;\n    }\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        <h3>Contacts by name</h3>\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n        {contacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}